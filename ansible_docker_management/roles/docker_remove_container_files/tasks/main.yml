---
- name: Get list of directories in host_vars for {{ inventory_hostname }}
  ansible.builtin.find:
    paths: "{{ playbook_dir }}/host_vars/{{ inventory_hostname }}"
    file_type: directory
    patterns: "*"
  register: host_vars_dirs
  delegate_to: localhost

- name: Filter directories to match defined containers
  ansible.builtin.set_fact:
    matched_container_dirs: "{{ host_vars_dirs.files | map(attribute='path') | map('basename') | intersect(container_names) | list }}"
  delegate_to: localhost

- name: Prepare directory mapping for containers
  ansible.builtin.set_fact:
    container_data_dirs: "{{ container_data_dirs | default({}) | combine({item: {'data_src_dir': playbook_dir + '/files/containers/' + item, 'volume_dest_dir': '/opt/docker-data/' + item}}) }}"
  loop: "{{ matched_container_dirs }}"
  delegate_to: localhost

- name: Delete container directories if they exist
  ansible.builtin.file:
    path: "{{ container_data_dirs[item]['volume_dest_dir'] }}"
    state: absent
  become: true
  loop: "{{ matched_container_dirs }}"
  loop_control:
    label: "{{ item }}"
